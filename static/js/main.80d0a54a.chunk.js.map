{"version":3,"sources":["logo/revv-11_burned.png","data/404.jpg","Navbar.js","roast.js","Home.js","newProjects.js","NotFound.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navbar","to","className","src","Logo","alt","href","Roast","Home","useEffect","window","scrollTo","style","data","require","Content","props","onClick","event","location","url","title","description","tags","map","item","i","key","NewProjects","NotFound","height","PageNotFound","width","display","margin","position","App","basename","exact","path","component","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"sFAAAA,EAAOC,QAAU,IAA0B,4C,mBCA3CD,EAAOC,QAAU,IAA0B,iC,upNC4B5BC,EAxBF,WACT,OACI,gCACI,kBAAC,IAAD,CAAMC,GAAG,KACP,yBAAKC,UAAU,OAAOC,IAAKC,IAAMC,IAAI,UAEvC,6BACI,wBAAIH,UAAU,cACZ,4BACD,kBAAC,IAAD,CAAMD,GAAG,KAAT,SAEA,4BACG,kBAAC,IAAD,CAAMA,GAAG,aAAT,aAEH,4BACE,uBAAGK,KAAK,sFAAR,eCYJC,EA7BH,WACR,OACI,yBAAKL,UAAU,kBACvB,0CACA,0CACA,mCACA,qCACA,sCACA,yCACA,yBAAKA,UAAU,cAAa,4BAC1B,uCACA,wCACA,2CAYF,uBAAGA,UAAU,eCEEM,EAxBJ,WAIP,OAHAC,qBAAU,WACNC,OAAOC,SAAS,EAAG,MAGnB,oCACA,yBAAKT,UAAU,wBACf,yJAEA,yBAAKA,UAAU,QACX,kBAAC,EAAD,MACI,yBAAKA,UAAU,OACX,6YAGZ,yBAAKA,UAAU,0BACf,uBAAGU,MAAO,CAAC,QAAU,SAArB,4CAAuE,kBAAC,IAAD,CAAMX,GAAG,YAAYW,MAAO,CAAC,eAAiB,YAAY,WAAa,QAAvE,QAAvE,0FAA8O,uBAAGA,MAAO,CAAC,eAAiB,YAAY,WAAa,OAAQN,KAAK,iCAAlE,uBAA9O,sDCnBFO,G,MAAKC,EAAQ,KAEbC,EAAQ,SAACC,GACX,IAAIH,EAAKG,EAAMH,KAIf,OAHAJ,qBAAU,WACNC,OAAOC,SAAS,EAAG,MAInB,yBAAKT,UAAU,kBAAkBe,QAAS,SAAAC,GAAK,OAAKR,OAAOS,SAASb,KAAKO,EAAKO,KAAKR,MAAO,CAAC,OAAU,YACjG,0BAAMV,UAAU,OAAQW,EAAKQ,OAC7B,uBAAGnB,UAAU,QAAQW,EAAKS,aAC1B,0BAAMV,MAAO,CAAC,SAAW,OAAO,WAAa,SAEzCC,EAAKU,KAAKC,KAAI,SAACC,EAAKC,GAChB,OACA,0BAAMxB,UAAU,MAAMyB,IAAKD,GAAID,QAkBpCG,EAVG,WACd,OACI,6BACKf,EAAKW,KAAI,SAAAC,GAAI,OACV,kBAAC,EAAD,CAASZ,KAAMY,EAAME,IAAKF,EAAKJ,a,iBCfhCQ,EATA,WACX,OACI,yBAAKjB,MAAO,CAACkB,OAAO,UAC5B,yBAAK3B,IAAK4B,IAAc1B,IAAI,IAAIO,MAAO,CAACoB,MAAO,OAAQF,OAAQ,OAAQG,QAAS,QAASC,OAAQ,OAAQC,SAAU,cACnH,gCAAQ,kBAAC,IAAD,CAAMlC,GAAG,KAAT,0BCoBOmC,EApBL,WACN,OACA,6BACE,kBAAC,IAAD,CAAYC,SAAS,KACjB,kBAAC,EAAD,MACF,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWhC,IACjC,kBAAC,IAAD,CAAO+B,KAAK,SAASC,UAAWjC,IAChC,kBAAC,IAAD,CAAOgC,KAAK,YAAYC,UAAWZ,IACnC,kBAAC,IAAD,CAAOY,UAAWX,MAGxB,4BAAQ3B,UAAU,UACd,uFACA,wDCXUuC,QACW,cAA7B/B,OAAOS,SAASuB,UAEe,UAA7BhC,OAAOS,SAASuB,UAEhBhC,OAAOS,SAASuB,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.80d0a54a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/revv-11_burned.7a439358.png\";","module.exports = __webpack_public_path__ + \"static/media/404.872a7ac1.jpg\";","import React from 'react'\nimport {Link} from 'react-router-dom'\nimport Logo from './logo/revv-11_burned.png'\n\nconst Navbar=() => {\n    return (\n        <header>\n            <Link to='/'>\n              <img className=\"logo\" src={Logo} alt=\"logo\" />\n            </Link>\n            <nav>\n                <ul className=\"nav__links\">\n                  <li>\n                 <Link to=\"/\">Home</Link>\n                 </li>\n                 <li>\n                    <Link to=\"/projects\">Projects</Link>\n                 </li>\n                 <li>\n                   <a href=\"https://drive.google.com/file/d/1ENaycVDn4U4RTOsUolzKOyR_V-aekmew/view?usp=sharing\">Resume</a>\n                   \n                 </li>\n                </ul>\n            </nav>\n          </header>\n    )\n}\n\nexport default Navbar","import React from 'react'\n\nconst Roast=()=>{\n    return (\n        <div className=\"header-wrapper\">\n<h1>FULL-STACK</h1> \n<h1>SERVERLESS</h1> \n<h1>AWS</h1>\n<h1>REACT</h1>\n<h1>NODEJS</h1>\n<h1>DEVELOPER</h1>\n<div className=\"references\"><ul>\n  <li>MongoDB</li>\n  <li>DynamoDB</li>\n  <li>Postegres</li></ul></div>\n{/* <div className=\"references\">\n  <p>Express</p>\n    <ul>\n      <li><a href=\"https://drafts.csswg.org/css-writing-modes-3/\">NodeJs</a></li>    \n      <li><a href=\"https://drafts.csswg.org/css-writing-modes-4/\">MongoDB</a></li>\n      <li><a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/writing-mode\">React</a></li>    \n      <li><a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/writing-mode\">Serverless</a></li> \n      <li><a href=\"https://24ways.org/2016/css-writing-modes/\">ChatBot</a></li> \n      \n    </ul>\n</div> */}\n<b className=\"red-line\"></b>\n</div>\n    )\n}\n\nexport default Roast","import React,{useEffect} from 'react'\nimport Roast from './roast'\nimport { Link } from 'react-router-dom'\n\nconst Home=() => {\n    useEffect(() => {\n        window.scrollTo(0, 0)\n    });\n    return (\n        <>\n        <div className=\"main-content-wrapper\">\n        <p>Hi I'm Sindujan,web developer based in Colombo.I'm passionate about building webservices and APIs which empowers the web.</p>\n        </div>\n        <div className=\"lolo\">\n            <Roast />\n                <div className=\"mee\">\n                    <p>Captivated by the endless possibilities that technology can bring,I stay motivated to bring meaningful level of impact with my javascript skills.While the cloud services are advancing in supersonic speed and giving more reason to develop highly scalable software without worrying about underlying infrastructure,I tend to be relevant by chasing the next Big Idea. </p>\n                </div>\n        </div>\n        <div className=\"main-content-wrapper-2\">\n        <p style={{'padding':'10px'}}>Checkout some of my open source projects <Link to=\"/projects\" style={{'textDecoration':'underline','fontWeight':'900'}}>here</Link>. Interested in working with me? If that’s the case, don’t be a stranger and <a style={{'textDecoration':'underline','fontWeight':'600'}} href=\"mailto:sindujan.k28@gmail.com\" >feel free to say hi</a>, I’d be more than happy to chat with you!</p>\n        \n        </div>\n        \n       </>\n             )\n}\n\nexport default Home","import React,{useEffect} from 'react'\nconst data=require('./data/data1')\n\nconst Content=(props) => {\n    let data=props.data\n    useEffect(() => {\n        window.scrollTo(0, 0)\n    });\n    return (\n        \n        <div className=\"content-wrapper\" onClick={event =>  window.location.href=data.url} style={{'cursor': 'pointer'}} >\n            <span className=\"til\" >{data.title}</span>\n            <p className=\"para\">{data.description}</p>\n            <span style={{'fontSize':'15px','fontWeight':'500'}}></span>\n            {\n                data.tags.map((item,i)=>{\n                    return (\n                    <span className=\"tag\" key={i}>{item}</span>\n                    )\n                })\n            }\n        </div>\n    )\n}\n\nconst NewProjects=()=>{\n    return (\n        <div>\n            {data.map(item => (\n                <Content data={item} key={item.title} />\n            ))}\n        </div>\n    )\n}\n\nexport default NewProjects","import React from 'react'\nimport PageNotFound from './data/404.jpg';\nimport {Link} from 'react-router-dom'\n\n\nconst NotFound=()=>{\n    return (\n        <div style={{height:'100vh'}}>\n<img src={PageNotFound} alt=\"#\" style={{width: '91vw', height: '90vh', display: 'block', margin: 'auto', position: 'relative' }} />\n<center><Link to=\"/\">Return to Home Page</Link></center>\n</div>\n    )\n}\n\nexport default NotFound","import React from \"react\";\nimport {HashRouter,Switch,Route} from \"react-router-dom\";\nimport Navbar from './Navbar'\nimport Home from './Home'\nimport './App.css'\nimport Roast from \"./roast\";\nimport NewProjects from \"./newProjects\";\nimport NotFound from \"./NotFound\";\n\nconst App=() => {\n    return (\n    <div>\n      <HashRouter basename='/'>\n          <Navbar />\n        <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route path=\"/about\" component={Roast} />\n            <Route path=\"/projects\" component={NewProjects} />\n            <Route component={NotFound} />\n        </Switch>\n      </HashRouter>\n      <footer className=\"footer\">\n          <span>Let's collaborate together! -- sindujan.k28@gmail.com</span>\n          <span>&#169; Sindujan, 2020</span>\n      </footer>\n    </div>\n    )\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}